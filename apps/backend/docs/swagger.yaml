basePath: /api
definitions:
  models.Book:
    properties:
      author:
        maxLength: 255
        minLength: 1
        type: string
      created_at:
        type: string
      description:
        maxLength: 1000
        type: string
      genre:
        maxLength: 100
        type: string
      id:
        type: string
      isbn:
        maxLength: 20
        type: string
      title:
        maxLength: 255
        minLength: 1
        type: string
      updated_at:
        type: string
      year:
        minimum: 1000
        type: integer
    required:
    - author
    - title
    - year
    type: object
  models.CreateBookRequest:
    properties:
      author:
        maxLength: 255
        minLength: 1
        type: string
      description:
        maxLength: 1000
        type: string
      genre:
        maxLength: 100
        type: string
      isbn:
        maxLength: 20
        type: string
      title:
        maxLength: 255
        minLength: 1
        type: string
      year:
        minimum: 1000
        type: integer
    required:
    - author
    - title
    - year
    type: object
  models.ErrorResponse:
    properties:
      code:
        type: integer
      error:
        type: string
      message:
        type: string
    type: object
  models.URLProcessRequest:
    properties:
      operation:
        enum:
        - canonical
        - redirection
        - all
        type: string
      url:
        type: string
    required:
    - operation
    - url
    type: object
  models.URLProcessResponse:
    properties:
      processed_url:
        type: string
    type: object
  models.UpdateBookRequest:
    properties:
      author:
        maxLength: 255
        minLength: 1
        type: string
      description:
        maxLength: 1000
        type: string
      genre:
        maxLength: 100
        type: string
      isbn:
        maxLength: 20
        type: string
      title:
        maxLength: 255
        minLength: 1
        type: string
      year:
        minimum: 1000
        type: integer
    required:
    - author
    - title
    - year
    type: object
  models.ValidationError:
    properties:
      field:
        type: string
      message:
        type: string
    type: object
  models.ValidationErrorResponse:
    properties:
      error:
        type: string
      errors:
        items:
          $ref: '#/definitions/models.ValidationError'
        type: array
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: A simple library management system API with URL processing service
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Library Management API
  version: "1.0"
paths:
  /books:
    get:
      consumes:
      - application/json
      description: Retrieve all books from the library
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Book'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get all books
      tags:
      - books
    post:
      consumes:
      - application/json
      description: Add a new book to the library
      parameters:
      - description: Book data
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/models.CreateBookRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Book'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ValidationErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create a new book
      tags:
      - books
  /books/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a book by ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Delete a book
      tags:
      - books
    get:
      consumes:
      - application/json
      description: Retrieve a specific book by its ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Book'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get book by ID
      tags:
      - books
    put:
      consumes:
      - application/json
      description: Update an existing book by ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated book data
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/models.UpdateBookRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Book'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ValidationErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Update a book
      tags:
      - books
  /url-process:
    post:
      consumes:
      - application/json
      description: Process URL based on operation type (canonical, redirection, or
        all)
      parameters:
      - description: URL processing request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.URLProcessRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.URLProcessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ValidationErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Process URL
      tags:
      - url
swagger: "2.0"
